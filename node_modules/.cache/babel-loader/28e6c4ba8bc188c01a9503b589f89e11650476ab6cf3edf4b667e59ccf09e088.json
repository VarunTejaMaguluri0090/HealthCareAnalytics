{"ast":null,"code":"var _jsxFileName = \"/Users/varunsluckysmac/Documents/Academics/CMPE 295B/Health Care Analytics/src/components/HeartHealthData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport TopNavBar from './TopNav';\nimport '../styles/health.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeartHealthData = () => {\n  _s();\n  const [heartHealthData, setHeartHealthData] = React.useState(null);\n  const [showHeartHealthPopup, setShowHeartHealthPopup] = React.useState(false);\n  const fetchHeartHealthData = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/fetch_heart_health', {\n        method: 'GET',\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(data);\n        setHeartHealthData(data);\n        setShowHeartHealthPopup(true);\n      } else {\n        alert('You have not entered any previous health data. Please enter data in Track the Heart Health.');\n        console.error('Failed to fetch heart health data');\n      }\n    } catch (error) {\n      console.error(\"An error occurred:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchHeartHealthData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(TopNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }, this), showHeartHealthPopup && heartHealthData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          marginTop: '80px'\n        },\n        children: \"Heart Health Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Chest Pain Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Pressure\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cholesterol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Blood Sugar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Max Heart Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Angina\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Date & Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: heartHealthData && heartHealthData.map((data, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.age\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.sex === 1 ? 'Male' : 'Female'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.chestPainType === 1 ? 'Unstable or Variant Angina' : heartHealthData.chestPainType === 2 ? 'Myocardial Infarction' : heartHealthData.chestPainType === 3 ? 'Pericarditis' : 'Non-cardiac Chest Pain'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.bloodPressure\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.cholesterol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.bloodSugar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.maxHeartRate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.angina === 1 ? 'yes' : 'no'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: data.c_datetime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 3\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(HeartHealthData, \"zodaIXz2dK6mceg0wcvBcxNPPN0=\");\n_c = HeartHealthData;\nexport default HeartHealthData;\nvar _c;\n$RefreshReg$(_c, \"HeartHealthData\");","map":{"version":3,"names":["React","useEffect","TopNavBar","jsxDEV","_jsxDEV","HeartHealthData","_s","heartHealthData","setHeartHealthData","useState","showHeartHealthPopup","setShowHeartHealthPopup","fetchHeartHealthData","response","fetch","method","credentials","ok","data","json","console","log","alert","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexDirection","alignItems","marginTop","map","index","age","sex","chestPainType","bloodPressure","cholesterol","bloodSugar","maxHeartRate","angina","c_datetime","_c","$RefreshReg$"],"sources":["/Users/varunsluckysmac/Documents/Academics/CMPE 295B/Health Care Analytics/src/components/HeartHealthData.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\n\r\nimport TopNavBar from './TopNav';\r\nimport '../styles/health.css'; \r\n\r\n\r\nconst HeartHealthData = () => {\r\n    const [heartHealthData, setHeartHealthData] = React.useState(null);\r\n    const [showHeartHealthPopup, setShowHeartHealthPopup] = React.useState(false);\r\n\r\n    const fetchHeartHealthData = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/fetch_heart_health', {\r\n                method: 'GET',\r\n                credentials: 'include',\r\n            });\r\n    \r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                console.log(data); \r\n                setHeartHealthData(data);\r\n                setShowHeartHealthPopup(true);\r\n            } else {\r\n                alert('You have not entered any previous health data. Please enter data in Track the Heart Health.');\r\n                console.error('Failed to fetch heart health data');\r\n            }\r\n        } catch (error) {\r\n            console.error(\"An error occurred:\", error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHeartHealthData();\r\n    }, []);\r\n\r\n    return (\r\n\r\n        <div className=\"table-container\">\r\n              <TopNavBar />\r\n            {showHeartHealthPopup && heartHealthData && (\r\n                <div >\r\n                    <h3 style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginTop: '80px' }}>Heart Health Data</h3>\r\n                    <table className=\"table\">\r\n                        \r\n                        <thead>\r\n                            <tr>\r\n                                <th>Age</th>\r\n                                <th>Sex</th>\r\n                                <th>Chest Pain Type</th>\r\n                                <th>Blood Pressure</th>\r\n                                <th>Cholesterol</th>\r\n                                <th>Blood Sugar</th>\r\n                                <th>Max Heart Rate</th>\r\n                                <th>Angina</th>\r\n                                <th>Date & Time</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {heartHealthData && heartHealthData.map((data, index) => (\r\n  <tr key={index}>\r\n                                <td>{data.age}</td>\r\n                                <td>{data.sex === 1 ? 'Male' : 'Female'}</td>\r\n                                <td>{data.chestPainType === 1 ? 'Unstable or Variant Angina' :\r\n                                heartHealthData.chestPainType === 2 ? 'Myocardial Infarction' :\r\n                                heartHealthData.chestPainType === 3 ? 'Pericarditis' :\r\n                                'Non-cardiac Chest Pain'\r\n                                }</td>\r\n                                <td>{data.bloodPressure}</td>\r\n                                <td>{data.cholesterol}</td>\r\n                                <td>{data.bloodSugar}</td>\r\n                                <td>{data.maxHeartRate}</td>\r\n                                <td>{data.angina === 1? 'yes' : 'no'}</td>\r\n                                <td>{data.c_datetime}</td>\r\n                            </tr>\r\n                            \r\n))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HeartHealthData;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}